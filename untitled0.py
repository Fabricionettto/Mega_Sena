# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10pGnpWVR7tcFkOYE_V_UJisO_HWvk75W

# Nova seção
"""

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Exiba as primeiras 5 linhas do DataFrame para uma visão geral dos dados
print("Primeiras 5 linhas dos dados:")
print(df.head())

# Resumo estatístico dos dados
print("\nResumo estatístico dos dados:")
print(df.describe())

# Verifique o número de linhas e colunas no DataFrame
num_linhas, num_colunas = df.shape
print(f"\nNúmero de linhas: {num_linhas}")
print(f"Número de colunas: {num_colunas}")

# Liste os nomes das colunas
print("\nNomes das colunas:")
print(df.columns)

# Verifique o tipo de dados de cada coluna
print("\nTipos de dados das colunas:")
print(df.dtypes)

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Filtre os dados para os últimos 3 anos
hoje = pd.to_datetime('today')
tres_anos_atras = hoje - pd.DateOffset(years=3)
df_ultimos_3_anos = df[df['data_sorteio'] >= tres_anos_atras]

# Conte quantas vezes a coluna 'ganhadores' tem o valor 0 nos últimos 3 anos
nao_houve_ganhadores = df_ultimos_3_anos[df_ultimos_3_anos['ganhadores'] == 0]
quantidade = len(nao_houve_ganhadores)

print(f'Nos últimos 3 anos, houve {quantidade} vezes em que não houve ganhadores (Ganhadores = 0).')

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Filtre os dados para os últimos 3 anos
hoje = pd.to_datetime('today')
tres_anos_atras = hoje - pd.DateOffset(years=3)
df_ultimos_3_anos = df[df['data_sorteio'] >= tres_anos_atras]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um dicionário para contar a frequência dos números
frequencia_numeros = {numero: 0 for numero in numeros}

# Conte a frequência dos números nos últimos 3 anos
for _, row in df_ultimos_3_anos.iterrows():
    for numero in numeros:
        if numero in row.values[2:8]:
            frequencia_numeros[numero] += 1

# Organize os números por quantidade
frequencia_ordenada = sorted(frequencia_numeros.items(), key=lambda x: x[1], reverse=True)

# Calcule a porcentagem de vezes que saíram para menos
total_sorteios = len(df_ultimos_3_anos)
porcentagens = {numero: (frequencia / total_sorteios) * 100 for numero, frequencia in frequencia_ordenada}

# Exiba os resultados
for numero, frequencia in frequencia_ordenada:
    porcentagem = porcentagens[numero]
    print(f'Número {numero}: Saíram {frequencia} vezes ({porcentagem:.2f}% das vezes)')

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Filtre os dados para o último ano
hoje = pd.to_datetime('today')
um_ano_atras = hoje - pd.DateOffset(years=1)
df_ultimo_ano = df[(df['data_sorteio'] >= um_ano_atras) & (df['data_sorteio'] <= hoje)]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um dicionário para contar a frequência dos números
frequencia_numeros = {numero: 0 for numero in numeros}

# Conte a frequência dos números no último ano
for _, row in df_ultimo_ano.iterrows():
    for numero in numeros:
        if numero in row.values[2:8]:
            frequencia_numeros[numero] += 1

# Organize os números por quantidade
frequencia_ordenada = sorted(frequencia_numeros.items(), key=lambda x: x[1], reverse=True)

# Calcule a porcentagem de vezes que saíram para menos
total_sorteios = len(df_ultimo_ano)
porcentagens = {numero: (frequencia / total_sorteios) * 100 for numero, frequencia in frequencia_ordenada}

# Exiba os resultados
for numero, frequencia in frequencia_ordenada:
    porcentagem = porcentagens[numero]
    print(f'Número {numero}: Saíram {frequencia} vezes ({porcentagem:.2f}% das vezes)')

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Filtre os dados para o último ano
hoje = pd.to_datetime('today')
um_ano_atras = hoje - pd.DateOffset(years=1)
df_ultimo_ano = df[(df['data_sorteio'] >= um_ano_atras) & (df['data_sorteio'] <= hoje)]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um conjunto para rastrear os números que saíram no último ano
numeros_sairam_ultimo_ano = set()

# Registre os números que saíram no último ano
for _, row in df_ultimo_ano.iterrows():
    for numero in row.values[2:8]:
        numeros_sairam_ultimo_ano.add(numero)

# Identifique os números que não saíram no último ano
numeros_nao_sairam_ultimo_ano = [numero for numero in numeros if numero not in numeros_sairam_ultimo_ano]

print("Números que não saíram no último ano:")
print(numeros_nao_sairam_ultimo_ano)

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Filtre os dados para o último ano
hoje = pd.to_datetime('today')
um_ano_atras = hoje - pd.DateOffset(years=1)
df_ultimo_ano = df[(df['data_sorteio'] >= um_ano_atras) & (df['data_sorteio'] <= hoje)]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um conjunto para rastrear os números que saíram no último ano
numeros_sairam_ultimo_ano = set()

# Registre os números que saíram no último ano
for _, row in df_ultimo_ano.iterrows():
    for numero in row.values[2:8]:
        numeros_sairam_ultimo_ano.add(numero)

# Identifique os números que não saíram no último ano
numeros_nao_sairam_ultimo_ano = [numero for numero in numeros if numero not in numeros_sairam_ultimo_ano]

print("Números que não saíram no último ano:")
print(numeros_nao_sairam_ultimo_ano)

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Ordene o DataFrame pelo mais recente para o mais antigo
df = df.sort_values(by='data_sorteio', ascending=False)

# Filtre os últimos 20 sorteios
df_ultimos_20_sorteios = df.head(20)

# Filtre os concursos em que não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df_ultimos_20_sorteios[df_ultimos_20_sorteios['ganhadores'] == 0]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um contador para rastrear os números que mais saíram
contador_numeros = Counter()

# Conte a frequência dos números nos concursos sem ganhadores
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    contador_numeros.update(numeros_sorteados)

# Encontre os números que mais saíram nos concursos sem ganhadores
numeros_mais_sairam = contador_numeros.most_common()

print("Números que mais saíram nos últimos 20 sorteios sem ganhadores:")
for numero, frequencia in numeros_mais_sairam:
    print(f"Número {numero}: {frequencia} vezes")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Ordene o DataFrame pelo mais recente para o mais antigo
df = df.sort_values(by='data_sorteio', ascending=False)

# Filtre os últimos 10 sorteios
df_ultimos_10_sorteios = df.head(10)

# Filtre os concursos em que não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df_ultimos_10_sorteios[df_ultimos_10_sorteios['ganhadores'] == 0]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um contador para rastrear os números que mais saíram
contador_numeros = Counter()

# Conte a frequência dos números nos concursos sem ganhadores
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    contador_numeros.update(numeros_sorteados)

# Encontre os números que mais saíram nos concursos sem ganhadores
numeros_mais_sairam = contador_numeros.most_common()

print("Números que mais saíram nos últimos 10 sorteios sem ganhadores:")
for numero, frequencia in numeros_mais_sairam:
    print(f"Número {numero}: {frequencia} vezes")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Ordene o DataFrame pelo mais recente para o mais antigo
df = df.sort_values(by='data_sorteio', ascending=False)

# Filtre os últimos 10 sorteios
df_ultimos_10_sorteios = df.head(10)

# Filtre os concursos em que não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df_ultimos_10_sorteios[df_ultimos_10_sorteios['ganhadores'] == 0]

# Crie uma lista com os números de 01 a 60
numeros = list(range(1, 61))

# Inicialize um contador para rastrear os números que menos saíram
contador_numeros = Counter()

# Conte a frequência dos números nos concursos sem ganhadores
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    contador_numeros.update(numeros_sorteados)

# Encontre os números que menos saíram nos concursos sem ganhadores
numeros_menos_sairam = contador_numeros.most_common()[-10:]  # Os 10 menos frequentes

print("Números que menos saíram nos últimos 10 sorteios sem ganhadores:")
for numero, frequencia in numeros_menos_sairam:
    print(f"Número {numero}: {frequencia} vezes")

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Inicialize um contador para rastrear quantas vezes os números aparecem
contador_numeros = {numero: 0 for numero in numeros_analisados}

# Percorra todos os concursos para contar a frequência dos números
for _, row in df.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_analisados:
        if numero in numeros_sorteados:
            contador_numeros[numero] += 1

# Calcule quantas vezes cada número apareceu no geral
for numero in numeros_analisados:
    frequencia = contador_numeros[numero]
    print(f"Número {numero}: {frequencia} vezes")

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Ordene o DataFrame pelo mais recente para o mais antigo
df = df.sort_values(by='data_sorteio', ascending=False)

# Filtre os últimos 20 jogos
df_ultimos_20_jogos = df.head(20)

# Inicialize um contador para rastrear quantas vezes os números aparecem
contador_numeros = {numero: 0 for numero in numeros_analisados}

# Percorra os últimos 20 jogos para contar a frequência dos números
for _, row in df_ultimos_20_jogos.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_analisados:
        if numero in numeros_sorteados:
            contador_numeros[numero] += 1

# Calcule quantas vezes cada número apareceu nos últimos 20 jogos
for numero in numeros_analisados:
    frequencia = contador_numeros[numero]
    print(f"Número {numero}: {frequencia} vezes nos últimos 20 jogos")

import pandas as pd

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Ordene o DataFrame pelo mais recente para o mais antigo
df = df.sort_values(by='data_sorteio', ascending=False)

# Filtre os últimos 20 jogos
df_ultimos_20_jogos = df.head(20)

# Inicialize um contador para rastrear quantas vezes os números aparecem
contador_numeros = {numero: 0 for numero in numeros_analisados}

# Percorra os últimos 20 jogos para contar a frequência dos números
for _, row in df_ultimos_20_jogos.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_analisados:
        if numero in numeros_sorteados:
            contador_numeros[numero] += 1

# Calcule a frequência percentual de cada número
total_jogos = len(df_ultimos_20_jogos)
frequencia_percentual = {numero: (frequencia / total_jogos) * 100 for numero, frequencia in contador_numeros.items()}

# Organize os números por frequência percentual, do mais frequente para o menos frequente
numeros_ordenados = sorted(frequencia_percentual.items(), key=lambda x: x[1], reverse=True)

print("Frequência percentual dos números nos últimos 20 jogos:")
for numero, percentual in numeros_ordenados:
    print(f"Número {numero}: {percentual:.2f}%")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Inicialize um contador para rastrear quantas vezes os números aparecem
contador_numeros = Counter()

# Percorra todos os concursos para contar a frequência dos números, excluindo os especificados
for _, row in df.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_sorteados:
        if numero not in numeros_analisados:
            contador_numeros[numero] += 1

# Calcule a frequência percentual de cada número
total_concursos = len(df)
frequencia_percentual = {numero: (frequencia / total_concursos) * 100 for numero, frequencia in contador_numeros.items()}

# Organize os números por frequência percentual, do mais frequente para o menos frequente
numeros_ordenados = sorted(frequencia_percentual.items(), key=lambda x: x[1], reverse=True)

print("Frequência percentual de todos os números, excluindo os especificados:")
for numero, percentual in numeros_ordenados:
    print(f"Número {numero}: {percentual:.2f}%")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Filtre os concursos onde não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df[df['ganhadores'] == 0]

# Inicialize um contador para rastrear quantas vezes os números aparecem nos concursos sem ganhadores, excluindo os especificados
contador_numeros = Counter()

# Percorra os concursos sem ganhadores para contar a frequência dos números
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_sorteados:
        if numero not in numeros_analisados:
            contador_numeros[numero] += 1

# Organize os números por frequência, do mais frequente para o menos frequente
numeros_ordenados = sorted(contador_numeros.items(), key=lambda x: x[1], reverse=True)

print("Frequência dos números em concursos sem ganhadores, excluindo os especificados:")
for numero, frequencia in numeros_ordenados:
    print(f"Número {numero}: {frequencia} vezes")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Filtre os concursos onde não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df[df['ganhadores'] == 0]

# Inicialize um contador para rastrear quantas vezes os números aparecem nos concursos sem ganhadores, excluindo os especificados
contador_numeros = Counter()

# Percorra os concursos sem ganhadores para contar a frequência dos números
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_sorteados:
        if numero not in numeros_analisados:
            contador_numeros[numero] += 1

# Calcule a frequência percentual de cada número
total_concursos_sem_ganhadores = len(concursos_sem_ganhadores)
frequencia_percentual = {numero: (frequencia / total_concursos_sem_ganhadores) * 100 for numero, frequencia in contador_numeros.items()}

# Organize os números por frequência percentual, do menor para o maior
numeros_ordenados = sorted(frequencia_percentual.items(), key=lambda x: x[1])

print("Frequência percentual dos números em concursos sem ganhadores, excluindo os especificados (do menor para o maior):")
for numero, percentual in numeros_ordenados:
    print(f"Número {numero}: {percentual:.2f}%")

import pandas as pd
from collections import Counter

# Especifique o caminho do arquivo Excel
file_path = "/content/MegaSena.xlsx"

# Carregue o arquivo Excel em um DataFrame
df = pd.read_excel(file_path)

# Renomeie as colunas para facilitar o acesso
df.rename(columns={'Data do Sorteio': 'data_sorteio', 'Ganhadores ': 'ganhadores'}, inplace=True)

# Converta a coluna 'data_sorteio' para o tipo de dados datetime
df['data_sorteio'] = pd.to_datetime(df['data_sorteio'], format='%d/%m/%Y', errors='coerce')

# Crie uma lista com os números 09, 33, 39, 43, 50 e 54
numeros_analisados = [9, 33, 39, 43, 50, 54]

# Filtre os concursos onde não houve ganhadores (ganhadores = 0)
concursos_sem_ganhadores = df[df['ganhadores'] == 0]

# Inicialize um contador para rastrear quantas vezes os números aparecem nos concursos sem ganhadores, excluindo os especificados
contador_numeros = Counter()

# Percorra os concursos sem ganhadores para contar a frequência dos números
for _, row in concursos_sem_ganhadores.iterrows():
    numeros_sorteados = row.values[2:8]
    for numero in numeros_sorteados:
        if numero not in numeros_analisados:
            contador_numeros[numero] += 1

# Calcule a frequência percentual de cada número
total_concursos_sem_ganhadores = len(concursos_sem_ganhadores)
frequencia_percentual = {numero: (frequencia / total_concursos_sem_ganhadores) * 100 for numero, frequencia in contador_numeros.items()}

# Organize os números por frequência percentual, do maior para o menor
numeros_ordenados = sorted(frequencia_percentual.items(), key=lambda x: x[1], reverse=True)

print("Frequência percentual dos números em concursos sem ganhadores, excluindo os especificados (do maior para o menor):")
for numero, percentual in numeros_ordenados:
    print(f"Número {numero}: {percentual:.2f}%")